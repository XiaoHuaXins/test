<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.InfoMapper" >
  <resultMap id="BaseResultMap" type="pojo.Info" >
    <result column="Id" property="id" jdbcType="VARCHAR" />
    <result column="Graduated" property="graduated" jdbcType="BIT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="pojo.InfoWithBLOBs" extends="BaseResultMap" >
    <result column="UserName" property="username" jdbcType="LONGVARCHAR" />
    <result column="Sex" property="sex" jdbcType="LONGVARCHAR" />
    <result column="Address" property="address" jdbcType="LONGVARCHAR" />
    <result column="hobby" property="hobby" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, Graduated
  </sql>
  <sql id="Blob_Column_List" >
    UserName, Sex, Address, hobby
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="pojo.InfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pojo.InfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="pojo.InfoExample" >
    delete from info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.InfoWithBLOBs" >
    insert into info (Id, Graduated, UserName, 
      Sex, Address, hobby
      )
    values (#{id,jdbcType=VARCHAR}, #{graduated,jdbcType=BIT}, #{username,jdbcType=LONGVARCHAR}, 
      #{sex,jdbcType=LONGVARCHAR}, #{address,jdbcType=LONGVARCHAR}, #{hobby,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="pojo.InfoWithBLOBs" >
    insert into info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="graduated != null" >
        Graduated,
      </if>
      <if test="username != null" >
        UserName,
      </if>
      <if test="sex != null" >
        Sex,
      </if>
      <if test="address != null" >
        Address,
      </if>
      <if test="hobby != null" >
        hobby,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="graduated != null" >
        #{graduated,jdbcType=BIT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=LONGVARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=LONGVARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=LONGVARCHAR},
      </if>
      <if test="hobby != null" >
        #{hobby,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pojo.InfoExample" resultType="java.lang.Integer" >
    select count(*) from info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update info
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.graduated != null" >
        Graduated = #{record.graduated,jdbcType=BIT},
      </if>
      <if test="record.username != null" >
        UserName = #{record.username,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sex != null" >
        Sex = #{record.sex,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.address != null" >
        Address = #{record.address,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.hobby != null" >
        hobby = #{record.hobby,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update info
    set Id = #{record.id,jdbcType=VARCHAR},
      Graduated = #{record.graduated,jdbcType=BIT},
      UserName = #{record.username,jdbcType=LONGVARCHAR},
      Sex = #{record.sex,jdbcType=LONGVARCHAR},
      Address = #{record.address,jdbcType=LONGVARCHAR},
      hobby = #{record.hobby,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update info
    set Id = #{record.id,jdbcType=VARCHAR},
      Graduated = #{record.graduated,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>